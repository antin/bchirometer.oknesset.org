// Generated by CoffeeScript 1.7.1
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    __hasProp = {}.hasOwnProperty;

  $(function() {
    var disable_category, page_turner, parse_score, show_page, update_link_results, votes_serialize;
    parse_score = function(e) {
      return parseFloat($(e).data().score || 0);
    };
    update_link_results = function() {
      var total, voted;
      voted = $('#agendas button.selected:not(.indifferent)').length;
      total = $('#agendas-list>li').length;
      $('.to-results').toggleClass('disabled', voted === 0);
      $('.to-results').attr('href', '#!results' + votes_serialize());
      return $('#progress').text("(הצבעת ל-" + voted + " מתוך " + total + " אג'נדות)");
    };
    disable_category = function() {
      var voted;
      voted = $('#agendas button.selected:visible:not(.indifferent)').length;
      return $("#categories a[href=\"" + location.hash + "\"]").toggleClass('has-votes', voted !== 0);
    };
    votes_serialize = function() {
      var vs;
      vs = {};
      $('#agendas button.selected:not(.indifferent)').each(function() {
        var aid, b;
        b = $(this);
        aid = b.parents('li').attr('id').slice('agenda-'.length);
        return vs[aid] = b.hasClass('agree') ? 'y' : 'n';
      });
      return JSON.stringify(vs);
    };
    $('#agendas-list>li').append($("<div>\n<button type=\"button\" class=\"agree\">בעד</button>\n<button type=\"button\" class=\"indifferent selected\">לא אכפת</button>\n<button type=\"button\" class=\"disagree\">נגד</button>\n<p><small>(* לחצו \"לא אכפת\" כדי לבטל הצבעה.)</small></p></div>"));
    show_page = function(p) {
      $('section').hide().filter(p).show();
      $('body').attr('data-page', p);
      return window.scrollTo(0, 0);
    };
    page_turner = function(p) {
      return function() {
        return show_page(p);
      };
    };
    page.base(location.pathname);
    page('splash:ref?', page_turner('#splash'));
    page('about', page_turner('#about'));
    page('qna', page_turner('#qna'));
    page('categories', page_turner('#categories'));
    page('agendas:cid', function(context) {
      var c, cid, icon, ids;
      cid = context.path.slice('agendas'.length);
      ids = $.parseJSON(cid);
      c = $("#categories-list a[href=\"#!" + context.path + "\"]");
      icon = c.attr('class').match(/fa-\S+/)[0];
      $('#agendas h2').empty().text(c.text()).prepend($("<i class=\"fa " + icon + "\"></i>"));
      $('#agendas-list li').each(function() {
        var a, aid, _ref;
        a = $(this);
        aid = a.attr('id').slice('agenda-'.length);
        return a.toggle((_ref = parseInt(aid, 10), __indexOf.call(ids, _ref) >= 0));
      });
      return show_page('#agendas');
    });
    page('results:votes?', function(context) {
      var agenda, e, final, p, party, r, scores, vote, votes, _fn, _fn1;
      if (!context.params.votes) {
        console.log('Missing votes; redirecting.');
        page('#!splash');
      }
      try {
        votes = $.parseJSON(context.params.votes);
      } catch (_error) {
        e = _error;
        console.log('parseJSON failed:', e);
        return page('#!splash');
      }
      _fn = function(agenda, vote) {
        var v;
        v = vote === 'y' ? 'agree' : 'disagree';
        return $("#agenda-" + agenda + " button." + v).addClass('selected').siblings().removeClass('selected');
      };
      for (agenda in votes) {
        if (!__hasProp.call(votes, agenda)) continue;
        vote = votes[agenda];
        _fn(agenda, vote);
      }
      if ($('#agendas button.selected:not(.indifferent)').length === 0) {
        console.log('No votes; redirecting.');
        page('#!splash');
      }
      final = {};
      $('#parties-list li').data('score', 0).find('h3 span').text('—');

      /*???
      		.find 'h3 img'
      		.attr 'src','meter/zero.png'
      		.siblings 'span'
       */
      $('#agendas-list>li').each(function() {
        var a, dis_agree, party, ps, score, _results;
        a = $(this);
        if (a.children('button.selected:not(.indifferent)').length !== 0) {
          dis_agree = (function() {
            switch (false) {
              case a.children('button.selected.agree').length === 0:
                return 1.0;
              default:
                return -1.0;
            }
          })();
          ps = $.parseJSON(a.attr('data-parties-scores'));
          _results = [];
          for (party in ps) {
            if (!__hasProp.call(ps, party)) continue;
            score = ps[party];
            _results.push((function(party, score) {
              final[party] || (final[party] = []);
              return final[party].push(score * dis_agree);
            })(party, score));
          }
          return _results;
        }
      });
      _fn1 = function(party, scores) {
        var average, sum;
        sum = scores.reduce(function(x, y) {
          return x + y;
        });
        average = sum / scores.length;
        return $("#party-" + party).data('score', average).find('h3 span').text(average.toFixed(1)).attr('title', 'ממוצע של \u202d' + scores);

        /*???
        				.find 'h3 img'
        				.attr 'src','meter/zero.png'
        				.siblings 'span'
         */
      };
      for (party in final) {
        if (!__hasProp.call(final, party)) continue;
        scores = final[party];
        _fn1(party, scores);
      }
      r = $('#parties-list');
      p = r.children().get().sort(function(x, y) {
        if ((parse_score(x)) < (parse_score(y))) {
          return 1;
        } else {
          return -1;
        }
      });
      r.append(p);
      $('#results>p span').text($('#agendas button.selected:not(.indifferent)').length);
      $('#parties-list li>img').hide().first().show();
      return show_page('#results');
    });
    page('*', function() {
      console.log('404; redirecting.');
      return page('#!splash');
    });
    page.start({
      hashbang: true
    });
    $('#agendas-list').on('click', 'button', function(ev) {
      var b, v;
      b = $(ev.target);
      v = (function() {
        switch (false) {
          case !b.hasClass('agree'):
            return 1;
          case !b.hasClass('indifferent'):
            return 0;
          case !b.hasClass('disagree'):
            return -1;
        }
      })();
      b.addClass('selected').siblings().removeClass('selected');
      disable_category();
      return update_link_results();
    });

    /*??? # Cancel votes button handler. #??? Removed.
    	$ '#cancel'
    	.click (ev)->
    		$ '#agendas button.selected:visible:not(.indifferent)'
    		.each ->
    			$ @
    			.removeClass 'selected'
    			.siblings '.indifferent'
    			.addClass 'selected'
    		 * Update stuff depending on number of votes.
    		disable_category()
    		update_link_results()
     */
    $('.to-results').click(function(ev) {
      if ($(this).hasClass('disabled')) {
        return ev.preventDefault();
      }
    });
    $('a.expand').click(function(ev) {
      var id;
      ev.preventDefault();
      id = $(ev.target).attr('href');
      return $(id).toggle();
    });

    /*??? Replace this with 'expand' handler.
    	$ '.synopsis a'
    	.click (ev)->
    		ev.preventDefault()
    		$ @
    		.parents '#agendas-list>li'
    		.children 'h4,p:not(.synopsis)'
    		.toggle()
     */
    $('#next').click(function(ev) {
      var n;
      ev.preventDefault();
      n = $("#categories-list a[href=\"" + location.hash + "\"]").parent().next().find('a');
      if (n.length === 0) {
        n = $("#categories-list a").first();
      }
      return page(n.attr('href'));
    });
    return update_link_results();
  });

}).call(this);
